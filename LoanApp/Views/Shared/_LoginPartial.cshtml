@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
      
        <div class="dropdown show">
            <a class="btn btn-outline-dark dropdown-toggle text-white" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Hello @UserManager.GetUserName(User)!
            </a>

            <div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
                <a id="manage" class="dropdown-item  text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Settings</a>
                @if (User.IsInRole(Utility.WC.AdminRole)) {
                <a class="dropdown-item" asp-controller="userProfiles"asp-action="Index">Loans</a>
                }
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button id="logout" type="submit" class="text-decoration-none btn btn-link text-dark">Logout</button>
                </form>

            </div>
        </div>
        
    }
    else
    {


        <li class="nav-item">
            <a class="nav-link text-white btn btn-outline-warning" id="login" asp-area="Identity" asp-page="/Account/Login"><i class="fa-solid fa-user text-white"></i>  Login</a>
        </li>
    }
</ul>
